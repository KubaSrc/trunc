%% Global setup

close all; clear all; clc
warning('off','all')

% fig sizes and scale factor
fig_w = 300; fig_h = 300; fig_s = 3;

% fonts
ax_font_size = 6*fig_s;
legend_font_size = 4*fig_s;
set(0,'DefaultTextFontname', 'CMU Sans Serif' )
set(0,'DefaultAxesFontName', 'CMU Sans Serif' )

% colors
map = brewermap(9,'Set1');

% save path
export_fig = false;

%% TRUNC

beta = 0:5:45;
files = strcat(string(0:5:45),repmat("deg.tdms",1,10));

input_data = load_data("./characterization/Efficiency Tests/Data/TRUNC/Input/",files);
output_data = load_data("./characterization/Efficiency Tests/Data/TRUNC/Output/",files);

power_in = zeros(size(beta));
power_out = zeros(size(beta));
window = 750;
offset = 50;
threshold = 0.95;

for i = 1:length(beta)

    % Find input power
    p_in = input_data{i};
    p_in = table2array(p_in(:,3));
    p_max = max(p_in);
    index = find(p_in > p_max*threshold, 1);
    p_in_mean = mean(p_in(index+offset:index+window+offset,:),1);
    power_in(i) = p_in_mean;

    % Find output power
    p_out = output_data{i};
    p_out = table2array(p_out(:,3));
    p_max = max(p_out);
    index = find(p_out > p_max*threshold, 1);
    p_out_mean = mean(p_out(index+offset:index+window+offset,:),1);
    power_out(i) = p_out_mean;

end

fig = figure(1); clf; hold on; grid on; box on;

plot(beta,100.*power_out./power_in,'o-.','markerFaceColor',"k",'color',"k",'lineWidth',2)

% axis formatting
set(findobj(gcf,'type','axes'),'FontSize',ax_font_size,'LineWidth',1.5);
ylim([0,100]);
xlim([0,45])

% figure formatting
set(gcf,'color','w');
set(fig, 'Units', 'inches');
width = 2.25;
height = 1.75;
set(fig, 'Position', [0, 0, width*2.5, height*2.5]);

% axis formatting
set(findobj(gcf,'type','axes'),'FontSize',ax_font_size,'LineWidth',1.5);

%% Rubber

beta = 0:5:40;
files = strcat(string(0:5:40),repmat("deg.tdms",1,9));

input_data = load_data("./characterization/Efficiency Tests/Data/Rubber/Input/",files);
output_data = load_data("./characterization/Efficiency Tests/Data/Rubber/Output/",files);

power_in = zeros(size(beta));
power_out = zeros(size(beta));
window = 750;
offset = 100;
threshold = 28;

for i = 1:length(beta)

    % Find input power
    data_input = input_data{i};
    p_in = table2array(data_input(:,3));
    r_in = table2array(data_input(:,2));
    index = find(r_in > threshold, 1)
    p_in_mean = mean(p_in(index+offset:index+window+offset,:),1);
    power_in(i) = p_in_mean;

    % Find output power
    p_out = output_data{i};
    p_out = table2array(p_out(:,3));
    p_max = max(p_out);
    index = find(r_ > threshold, 1)
    p_out_mean = mean(p_out(index+offset:index+window+offset,:),1);
    power_out(i) = p_out_mean;

end


plot(beta,100.*power_out./power_in,'o-.','markerFaceColor',"b",'color',"b",'lineWidth',2)


%% Steel


% export fig
if export_fig
    exportgraphics(gcf,'../figures/efficiency/eta-plot.png','Resolution',300*fig_s)
end



%% Helper functions
function [allData] = load_data(folder,files)

% Initialize a cell array to store the data from each file
allData = {};

% Loop through each TDMS file
for i = 1:length(files)
    
    % Full path to the TDMS file
    tdmsFile = folder + files(i);
    
    % Read the TDMS file (assuming you're using the built-in tdmsread function)
    data = tdmsread(tdmsFile);
    
    allData{i} = data{1};
end

end